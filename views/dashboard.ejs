<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tournament Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f4f6f8;
            margin: 0;
            padding: 0;
        }
        .dashboard-header {
            background: #fff;
            padding: 20px 0;
            margin-bottom: 30px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        .avatar {
            border-radius: 50%;
            width: 64px;
            height: 64px;
            margin-right: 15px;
        }
        .tournament-card {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            margin-bottom: 20px;
            transition: transform 0.2s;
        }
        .tournament-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .stat-card {
            background: #fff;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            text-align: center;
        }
        .stat-card i {
            font-size: 2em;
            margin-bottom: 10px;
            color: #0d6efd;
        }
    </style>
</head>
<body>
    <%- include('partials/nav') %>

    <div class="dashboard-header">
        <div class="container">
            <div class="d-flex align-items-center">
                <img class="avatar" src="https://cdn.discordapp.com/avatars/<%= user.discordId %>/<%= user.avatar %>.webp?size=300" alt="Avatar">
                <div>
                    <h1 class="mb-0">Welcome, <%= user.username %>!</h1>
                    <p class="text-muted mb-0">Manage your tournaments and brackets</p>
                </div>
            </div>
        </div>
    </div>

    <div class="container mb-5">
        <div class="row">
            <!-- Statistics Section -->
            <div class="col-md-3">
                <div class="stat-card">
                    <i class="bi bi-trophy"></i>
                    <h3><%= stats.totalTournaments || 0 %></h3>
                    <p class="text-muted mb-0">Total Tournaments</p>
                </div>
                <div class="stat-card">
                    <i class="bi bi-people"></i>
                    <h3><%= stats.totalParticipants || 0 %></h3>
                    <p class="text-muted mb-0">Total Participants</p>
                </div>
                <div class="stat-card">
                    <i class="bi bi-check-circle"></i>
                    <h3><%= stats.completedTournaments || 0 %></h3>
                    <p class="text-muted mb-0">Completed Tournaments</p>
                </div>
            </div>

            <!-- Main Content Section -->
            <div class="col-md-9">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>Your Tournaments</h2>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createTournamentModal">
                        <i class="bi bi-plus-circle me-2"></i>Create Tournament
                    </button>
                </div>

                <!-- Tournament Cards -->
                <div class="row">
                    <% tournaments.forEach(tournament => { %>
                        <div class="col-md-6 mb-4">
                            <div class="tournament-card p-4">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <h3><%= tournament.name %></h3>
                                    <span class="badge bg-<%= tournament.status === 'active' ? 'success' : tournament.status === 'completed' ? 'secondary' : 'warning' %>">
                                        <%= tournament.status %>
                                    </span>
                                </div>
                                <p class="text-muted"><%= tournament.description %></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <i class="bi bi-people me-2"></i><%= tournament.participants.length %> participants
                                    </small>
                                    <div class="btn-group">
                                        <a href="/tournaments/<%= tournament._id %>" class="btn btn-outline-primary btn-sm">
                                            View
                                        </a>
                                        <% if (tournament.status === 'pending' && tournament.creator.toString() === user._id.toString()) { %>
                                            <button onclick="deleteTournament('<%= tournament._id %>')" class="btn btn-outline-danger btn-sm">
                                                Delete
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Tournament Modal -->
    <div class="modal fade" id="createTournamentModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Tournament</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="createTournamentForm">
                        <div class="mb-3">
                            <label for="tournamentName" class="form-label">Tournament Name</label>
                            <input type="text" class="form-control" id="tournamentName" required>
                        </div>
                        <div class="mb-3">
                            <label for="tournamentDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="tournamentDescription" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input type="datetime-local" class="form-control" id="startDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="maxParticipants" class="form-label">Maximum Participants</label>
                            <input type="number" class="form-control" id="maxParticipants" min="2" value="8">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="createTournament()">Create Tournament</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        async function createTournament() {
            const formData = {
                name: document.getElementById('tournamentName').value,
                description: document.getElementById('tournamentDescription').value,
                startDate: document.getElementById('startDate').value,
                maxParticipants: document.getElementById('maxParticipants').value
            };

            try {
                const response = await fetch('/api/tournaments', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (!response.ok) {
                    throw new Error('Failed to create tournament');
                }

                window.location.reload();
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to create tournament. Please try again.');
            }
        }

        async function deleteTournament(tournamentId) {
            if (!confirm('Are you sure you want to delete this tournament?')) {
                return;
            }

            try {
                const response = await fetch(`/api/tournaments/${tournamentId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) {
                    throw new Error('Failed to delete tournament');
                }

                window.location.reload();
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to delete tournament. Please try again.');
            }
        }
    </script>
</body>
</html>
